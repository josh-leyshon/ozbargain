// Config from: https://dev.to/yovanylg/the-easiest-way-to-begin-with-expo-typescript-eslint-and-prettier-3dj1
{
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:@typescript-eslint/strict",
    "plugin:react/jsx-runtime",
    "plugin:prettier/recommended"
  ],
  "plugins": [
    "@typescript-eslint",
    "react",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "rules": {
    "import/no-unresolved": 0,
    "import/prefer-default-export": "off",
    "import/consistent-type-specifier-style": [
      "error"
    ],
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".ts",
          ".tsx"
        ]
      }
    ],
    "react/prop-types": 0,
    "react/require-default-props": "off",
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "trailingComma": "all",
        "arrowParens": "avoid",
        "endOfLine": "auto"
      }
    ],
    // Must be turned off to use `@typescript-eslint/no-use-before-define`.
    "no-use-before-define": "off",
    // Turned off because `styles` from `StyleSheet` is often placed under function components.
    "@typescript-eslint/no-use-before-define": "off",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "@typescript-eslint/no-unused-vars": [
      "error"
    ],
    "@typescript-eslint/consistent-type-definitions": [
      "error",
      "type"
    ],
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": {
          "attributes": false
        }
      }
    ],
    "@typescript-eslint/no-explicit-any": [
      "error"
    ],
    "import/extensions": [
      "error",
      "never"
    ]
  }
}
